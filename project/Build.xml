<xml>

   <!--
      Build with:
         -Diphonesim              -> build i386 version
         -Diphoneos               -> build armv6
         -Diphoneos -DHXCPP_ARMV7 -> build armv7
         -Dandroid                -> build android armv5
         -Dandroid  -DHXCPP_ARMV7 -> build android armv7
         -Dandroid  -DHXCPP_X86   -> build android x86
         - no defines             -> build current OS
         -DHXCPP_M64              -> build current OS, 64 but version
         -Ddebug                  -> Used in combination with above for debug
   -->

<!-- Configure HXCPP -->

   <set name="HXCPP_CPP11" value="1" />

      <!-- Force to use oldest supported platform -->
   <section if="android">
      <set name="PLATFORM" value="android-12" />
      <set name="PLATFORM" value="android-14" if="HXCPP_X86" />
   </section>

<!-- Setup common info -->

      <!-- included to import existing defines and built in defined values -->
   <include name="${HXCPP}/build-tool/BuildCommon.xml"/>
      <!-- include all default snow flags/defines -->
   <include name="include.snow.common.xml" />

<!-- Build set up -->

   <set name="SNOW_INC_DIR" value="${SNOW_PROJECT_ROOT}../include" />
   <set name="OUT_DIR" value="../ndll" />
      <!-- lib values -->
   <set name="LIBNAME" value="snow" />
   <set name="SLIBEXT" value=".lib" if="windows"/>
   <set name="SLIBEXT" value=".a" unless="windows"/>
   <set name="SHLIBEXT" value=".dll" if="windows"/>
   <set name="SHLIBEXT" value=".so" unless="windows"/>
   <set name="SHLIBEXT" value=".dylib" if="mac || ios"/>
   <set name="DEBUGEXTRA" value="" />
   <set name="DEBUGEXTRA" value="${DBG}" if="static_link"/>

   <set name="PRELIB" value="lib/${BINDIR}/${LIBPREFIX}" />
   <set name="POSTLIB" value="${DBG}${LIBEXTRA}${SLIBEXT}" />
   <set name="POSTSHAREDLIB" value="${DBG}${LIBEXTRA}${SHLIBEXT}" />

<!-- Build configs -->


<!-- Core snow configs -->

   <set name="SNOW_CORE_LOOP"   value="1"     unless="ios"/>
      <!-- are we using OpenAL? -->
   <set name="SNOW_USE_OPENAL"  value="1"/>
      <!-- are we using SDL? -->
   <set name="SNOW_USE_SDL"     value="1"/>

<!-- Porting only -->

      <!-- Don't define this unless trying to test/implement the empty platform porting helpers -->
   <!-- <set name="SNOW_USE_EMPTY_PLATFORM" value="1" /> -->

<!-- Library configs -->

   <!-- Ideally, I want to enclose these in an "unless" section as well, so you can use command line/builds to disable them -->

      <!-- should we build SDL files -->
   <set name="SNOW_LIB_SDL" value="1" if="SNOW_USE_SDL"/>
   <set name="NATIVE_TOOLKIT_SDL_STATIC" value="1" if="SNOW_USE_SDL"/>

      <!-- always using OpenAL for main platforms by default -->
   <set name="SNOW_LIB_OPENAL" value="1"/>
      <!-- always using stb_image for main platforms by default -->
   <set name="SNOW_LIB_STB_IMAGE" value="1"/>
      <!-- always including lzma for main platforms by default -->
   <set name="SNOW_LIB_LZMA" value="1" />
      <!-- always including zlib for main platforms by default, used by curl and other stuff -->
   <set name="SNOW_LIB_ZLIB" value="1" />

      <!-- always including media libs for main platforms by default -->
   <set name="SNOW_LIB_OGG" value="1" />
   <set name="SNOW_LIB_THEORA" value="1" />
   <set name="SNOW_LIB_VORBIS" value="1" />

<!-- Files/Sources -->

      <!-- include linked third party libs -->
   <include name="${NATIVE_TOOLKIT_PATH}/stb_image/files.xml"        if="SNOW_LIB_STB_IMAGE" />
   <include name="${NATIVE_TOOLKIT_PATH}/ogg/files.xml"              if="SNOW_LIB_OGG" />
   <include name="${NATIVE_TOOLKIT_PATH}/theora/files.xml"           if="SNOW_LIB_THEORA" />
   <include name="${NATIVE_TOOLKIT_PATH}/vorbis/files.xml"           if="SNOW_LIB_VORBIS" />
   <include name="${NATIVE_TOOLKIT_PATH}/lzma/files.xml"             if="SNOW_LIB_LZMA"/>
   <include name="${NATIVE_TOOLKIT_PATH}/zlib/files.xml"             if="SNOW_LIB_ZLIB"/>
   <include name="${NATIVE_TOOLKIT_PATH}/curl/files.xml"             if="SNOW_LIB_CURL" />
   <include name="${NATIVE_TOOLKIT_PATH}/sdl/files.xml"              if="SNOW_LIB_SDL"/>
   <include name="${NATIVE_TOOLKIT_PATH}/openal-android/files.xml"   if="android"/>
   <include name="${NATIVE_TOOLKIT_PATH}/openal/files.xml"           unless="mac || ios || android"/>

      <!-- snow source backing includes -->
   <include name="${SNOW_PROJECT_ROOT}/include.files.opengl.xml"/>

      <!-- snow build files -->
   <files id="snow">

         <!-- include paths -->
      <compilerflag value="-I${SNOW_INC_DIR}"/>
      <compilerflag value="-I${SNOW_INCLUDE_PATH}"/>

      <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/stb_image/include/"/>
      <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/ogg/include/"/>
      <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/vorbis/include/"/>
      <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/theora/include/"/>
      <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/lzma/include/"/>
      <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/zlib/include/"/>
      <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/curl/include/"/>
      <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/openal/include/"/>
      <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/openal/OpenAL32/include/"/>

         <!-- c++ defines -->
      <compilerflag value="-DHX_SNOW"  />
      <compilerflag value="-DSNOW_CORE_LOOP"          if="SNOW_CORE_LOOP"/>
      <compilerflag value="-D__IPHONEOS__"            if="ios"/>
      <compilerflag value="-Wno-conversion"           if="linux"/>

   <!-- snow sources -->

         <!-- bindings -->
      <file name="${SNOW_SRC_PATH}/snow_hx_bindings.cpp" />
         <!-- assets -->
      <file name="${SNOW_SRC_PATH}/assets/snow_assets_image.cpp" />
      <file name="${SNOW_SRC_PATH}/assets/snow_assets_audio.cpp" />
         <!-- common utils -->
      <file name="${SNOW_SRC_PATH}/common/ByteArray.cpp" />
         <!-- snow core -->
      <file name="${SNOW_SRC_PATH}/snow/snow_timestamp.cpp" />

   <!-- core options -->

      <section if="SNOW_USE_OPENAL">

         <compilerflag value="-DSNOW_USE_OPENAL" />

         <file name="${SNOW_SRC_PATH}/audio/openal/snow_audio_openal.cpp" />

      </section>

      <section if="SNOW_USE_SDL">

         <compilerflag value="-DSNOW_USE_SDL" />

            <!-- per platform configs preconfigured -->
        <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/sdl/include/"/>
        <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/sdl/include/configs/default/"    unless="windows || mac || linux"/>
        <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/sdl/include/configs/linux/"      if="linux"/>
        <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/sdl/include/configs/windows/"    if="windows"/>
        <compilerflag value="-I${NATIVE_TOOLKIT_PATH}/sdl/include/configs/mac/"        if="mac"/>

        <file name="${SNOW_SRC_PATH}/snow/sdl2/snow_core_sdl2.cpp" />
        <file name="${SNOW_SRC_PATH}/io/sdl2/snow_io_sdl2.cpp" />
        <file name="${SNOW_SRC_PATH}/window/sdl2/snow_window_sdl2.cpp"/>
        <file name="${SNOW_SRC_PATH}/input/sdl2/snow_input_sdl2.cpp"/>

            <!-- platform specific helpers -->
        <file name="${SNOW_SRC_PATH}/platform/windows/snow_windows_window_sdl2.cpp"          if="windows"/>

      </section>

   <!-- Porting specific helper only -->

   <section if="SNOW_USE_EMPTY_PLATFORM">

      <compilerflag value="-DSNOW_USE_EMPTY_PLATFORM" />

      <file name="${SNOW_SRC_PATH}/snow/empty/snow_empty_platform.cpp"/>

   </section>

   <!-- Platform specific sources -->

      <section if="mac">
         <file name="${SNOW_SRC_PATH}/platform/mac/snow_mac.mm"/>
         <file name="${SNOW_SRC_PATH}/platform/mac/snow_mac_filewatch.mm"/>
         <file name="${SNOW_SRC_PATH}/platform/mac/snow_mac_filedialogs.mm"/>
      </section>

      <section if="linux">
         <file name="${SNOW_SRC_PATH}/platform/linux/snow_linux.cpp"/>
         <file name="${SNOW_SRC_PATH}/platform/linux/snow_linux_filewatch.cpp"/>
         <file name="${SNOW_SRC_PATH}/platform/linux/snow_linux_filedialogs.cpp"/>
      </section>

      <section if="windows">
         <file name="${SNOW_SRC_PATH}/platform/windows/snow_windows.cpp"/>
         <file name="${SNOW_SRC_PATH}/platform/windows/snow_windows_filewatch.cpp"/>
         <file name="${SNOW_SRC_PATH}/platform/windows/snow_windows_filedialogs.cpp"/>
      </section>

      <section if="android">
         <file name="${SNOW_SRC_PATH}/platform/android/snow_android.cpp"/>
      </section>

      <section if="ios">
         <file name="${SNOW_SRC_PATH}/platform/ios/snow_ios.mm"/>
      </section>

   <!-- Library specific flags -->

      <section if="SNOW_LIB_CURL">
         <include name="${NATIVE_TOOLKIT_PATH}/curl/defines.xml" />
      </section>

      <section if="SNOW_LIB_LZMA">
         <include name="${NATIVE_TOOLKIT_PATH}/lzma/defines.xml" />
      </section>

      <section if="SNOW_LIB_OGG">
         <include name="${NATIVE_TOOLKIT_PATH}/ogg/defines.xml" />
      </section>

      <section if="SNOW_LIB_OPENAL">

         <include name="${NATIVE_TOOLKIT_PATH}/openal-android/defines.xml" if="android"/>
         <include name="${NATIVE_TOOLKIT_PATH}/openal/defines.xml" unless="mac || ios || android"/>

      </section>

      <section if="SNOW_LIB_SDL">
         <include name="${NATIVE_TOOLKIT_PATH}/sdl/defines.xml" />
      </section>

      <section if="SNOW_LIB_STB_IMAGE">
         <include name="${NATIVE_TOOLKIT_PATH}/stb_image/defines.xml" />
      </section>

      <section if="SNOW_LIB_THEORA">
         <include name="${NATIVE_TOOLKIT_PATH}/theora/defines.xml" />
      </section>

      <section if="SNOW_LIB_VORBIS">
         <include name="${NATIVE_TOOLKIT_PATH}/vorbis/defines.xml" />
      </section>

      <section if="SNOW_LIB_ZLIB">
         <include name="${NATIVE_TOOLKIT_PATH}/zlib/defines.xml" />
      </section>

   </files>



<!-- Targets -->

   <!-- root snow target -->
   <target id='snow' output="${LIBPREFIX}${LIBNAME}${DEBUGEXTRA}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">

      <outdir name="${OUT_DIR}/${BINDIR}" />

<!-- Build the libs -->
      <files id="native-toolkit-glew"           if="SNOW_LIB_GLEW"/>
      <files id="native-toolkit-curl"           if="SNOW_LIB_CURL"/>
      <files id="native-toolkit-lzma"           if="SNOW_LIB_LZMA"/>
      <files id="native-toolkit-ogg"            if="SNOW_LIB_OGG"/>
      <files id="native-toolkit-stb_image"      if="SNOW_LIB_STB_IMAGE"/>
      <files id="native-toolkit-theora"         if="SNOW_LIB_THEORA"/>
      <files id="native-toolkit-vorbis"         if="SNOW_LIB_VORBIS"/>
      <files id="native-toolkit-zlib"           if="SNOW_LIB_ZLIB"/>
      <files id="native-toolkit-sdl"            if="SNOW_LIB_SDL"/>

      <section if="SNOW_LIB_OPENAL">
         <files id="native-toolkit-openal-android" if="android"/>
            <!-- mac and iOS have OpenAL.framework, and rather rely on system version than embedded one -->
         <files id="native-toolkit-openal" unless="mac || ios || android"/>
      </section>

<!-- Build the snow library -->

         <!-- build the snow sources -->
      <files id="snow"/>
         <!-- and other snow sources -->
      <files id="snow-files-opengl"/>


<!-- Linking flags and libraries -->

      <section unless="static_link">

         <ext value=".so" />
         <ext value=".ndll" if="windows || mac || linux" />

      </section> <!-- unless static_link -->

   </target>

   <!-- It's important that this come after the initial snow definition -->
   <include name="include.link.snow.xml" />

   <target id="default">
      <target id='snow' unless='no_snow'/>
   </target>

</xml>
